{"ast":null,"code":"import _objectSpread from\"/Users/aryansrivatsavadande/Downloads/talentvibe-v2-cleaned/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useMemo,useRef,useCallback}from'react';import{useParams,Link}from'react-router-dom';import FeedbackModal from'./components/FeedbackModal';import InterviewModal from'./components/InterviewModal';import AdvancedAnalysis from'./components/AdvancedAnalysis';import'./JobsPage.css';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const generateWeightedSummary=(selectedResume,advancedAnalysis)=>{var _selectedResume$analy;const overallComment=((_selectedResume$analy=selectedResume.analysis)===null||_selectedResume$analy===void 0?void 0:_selectedResume$analy.reasoning)||\"No analysis available\";const sectionWeights=(advancedAnalysis===null||advancedAnalysis===void 0?void 0:advancedAnalysis.section_weights)||{};const overallAssessment=(advancedAnalysis===null||advancedAnalysis===void 0?void 0:advancedAnalysis.overall_assessment)||{};// Get sections with non-zero weights\nconst weightedSections=Object.entries(sectionWeights).filter(_ref=>{let[section,weight]=_ref;return weight>0;}).sort((_ref2,_ref3)=>{let[,a]=_ref2;let[,b]=_ref3;return b-a;});// Sort by weight descending\n// Build strengths and shortfalls\nconst strengths=overallAssessment.strengths||[];const shortfalls=overallAssessment.Shortfall_Areas||[];// Create section-specific insights\nconst sectionInsights=weightedSections.map(_ref4=>{let[section,weight]=_ref4;const sectionName=section.charAt(0).toUpperCase()+section.slice(1);return\"\".concat(sectionName,\" (\").concat(weight,\"% weight)\");}).join(\", \");// Build the summary\nlet summary=overallComment;if(strengths.length>0){summary+=\" The candidate demonstrates \".concat(strengths.slice(0,2).join(\" and \"),\".\");}if(sectionInsights){summary+=\" Key focus areas based on job requirements include \".concat(sectionInsights,\".\");}if(shortfalls.length>0){summary+=\" However, \".concat(shortfalls.slice(0,1).join(\" and \"),\" represent areas for development.\");}return summary;};const SkillMatrix=_ref5=>{var _skills$matches,_skills$matches2,_skills$gaps,_skills$gaps2;let{skills}=_ref5;return/*#__PURE__*/_jsxs(\"div\",{className:\"skill-matrix\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"skill-column matches\",children:[/*#__PURE__*/_jsxs(\"h4\",{children:[\"\\u2705 Matches (\",((_skills$matches=skills.matches)===null||_skills$matches===void 0?void 0:_skills$matches.length)||0,\")\"]}),/*#__PURE__*/_jsx(\"ul\",{children:(_skills$matches2=skills.matches)===null||_skills$matches2===void 0?void 0:_skills$matches2.map((skill,i)=>/*#__PURE__*/_jsx(\"li\",{children:skill},\"match-\".concat(i)))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"skill-column gaps\",children:[/*#__PURE__*/_jsxs(\"h4\",{children:[\"\\uD83D\\uDEAB Gaps (\",((_skills$gaps=skills.gaps)===null||_skills$gaps===void 0?void 0:_skills$gaps.length)||0,\")\"]}),/*#__PURE__*/_jsx(\"ul\",{children:(_skills$gaps2=skills.gaps)===null||_skills$gaps2===void 0?void 0:_skills$gaps2.map((skill,i)=>/*#__PURE__*/_jsx(\"li\",{children:skill},\"gap-\".concat(i)))})]})]});};const Timeline=_ref6=>{let{timeline}=_ref6;return/*#__PURE__*/_jsxs(\"div\",{className:\"timeline\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Timeline & Impact\"}),/*#__PURE__*/_jsx(\"ul\",{children:timeline===null||timeline===void 0?void 0:timeline.map((item,i)=>/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsxs(\"strong\",{children:[item.period,\":\"]}),\" \",item.role,\" - \",/*#__PURE__*/_jsx(\"em\",{children:item.details})]},\"timeline-\".concat(i)))})]});};const Logistics=_ref7=>{let{logistics}=_ref7;return/*#__PURE__*/_jsxs(\"div\",{className:\"logistics\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Comp & Logistics\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Desired Comp:\"}),\" \",(logistics===null||logistics===void 0?void 0:logistics.compensation)||'N/A']}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Notice Period:\"}),\" \",(logistics===null||logistics===void 0?void 0:logistics.notice_period)||'N/A']}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Work Auth:\"}),\" \",(logistics===null||logistics===void 0?void 0:logistics.work_authorization)||'N/A']}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Location:\"}),\" \",(logistics===null||logistics===void 0?void 0:logistics.location)||'N/A']})]})]});};const InterviewHub=_ref8=>{let{resume,onSchedule,onFeedback}=_ref8;const{interview}=resume;// A small helper for a consistent \"coming soon\" alert\nconst comingSoon=feature=>alert(\"\".concat(feature,\": Coming soon!\"));if(interview){switch(interview.status){case'scheduled':case'rescheduled':return/*#__PURE__*/_jsxs(\"div\",{className:\"interview-hub\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"interview-status-text\",children:\"\\u2705 Interview Scheduled\"}),/*#__PURE__*/_jsx(\"button\",{className:\"action-button\",onClick:()=>onSchedule(resume),children:\"Reschedule\"}),/*#__PURE__*/_jsx(\"button\",{className:\"action-button\",onClick:()=>comingSoon('Prepare Questions'),children:\"\\u2753 Prepare Questions\"})]});case'completed':return/*#__PURE__*/_jsxs(\"div\",{className:\"interview-hub\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"interview-status-text\",children:\"\\u2B50 Completed\"}),/*#__PURE__*/_jsx(\"button\",{className:\"action-button feedback\",onClick:()=>onFeedback(resume),children:\"\\uD83D\\uDCDD Log Feedback\"})]});// Add other statuses like 'cancelled' if needed\ndefault:// Fallback for any other status, shows the main schedule button\nbreak;}}// Default case if no interview object exists or status is not handled above\nreturn/*#__PURE__*/_jsxs(\"button\",{className:\"action-button schedule-interview\",onClick:()=>onSchedule(resume),children:[/*#__PURE__*/_jsx(\"span\",{role:\"img\",\"aria-label\":\"calendar icon\",style:{marginRight:'8px'},children:\"\\uD83D\\uDDD3\\uFE0F\"}),\"Schedule Interview\"]});};const JobDetailsPage=()=>{var _selectedResume$analy2,_selectedResume$analy3,_selectedResume$analy4,_selectedResume$analy5,_selectedResume$analy6,_selectedResume$analy7,_selectedResume$analy8,_selectedResume$analy9,_selectedResume$analy0;const{jobId}=useParams();const[jobDetails,setJobDetails]=useState(null);const[selectedResumeId,setSelectedResumeId]=useState(null);const[error,setError]=useState(null);const[isLoading,setIsLoading]=useState(true);const[isProcessing,setIsProcessing]=useState(false);const[isAnalyzing,setIsAnalyzing]=useState(true);// Show progress continuously\nconst[isAutoRefresh,setIsAutoRefresh]=useState(false);// Removed unused overallComment state\n// Set up callback for overall comment extraction\nReact.useEffect(()=>{window.setOverallComment=setOverallComment;return()=>{delete window.setOverallComment;};},[]);const[isFeedbackModalOpen,setIsFeedbackModalOpen]=useState(false);const[selectedResumeForFeedback,setSelectedResumeForFeedback]=useState(null);const[isInterviewModalOpen,setIsInterviewModalOpen]=useState(false);const[currentInterviewResume,setCurrentInterviewResume]=useState(null);const detailsRef=useRef(null);const stableCountRef=useRef(0);const lastResumeCountRef=useRef(0);const fetchJobDetails=useCallback(async()=>{try{var _data$resumes,_data$resumes2,_data$resumes2$filter;const response=await fetch(\"/api/jobs/\".concat(jobId));if(!response.ok){if(response.status===404){throw new Error('Job not found.');}throw new Error('Failed to fetch job details');}const data=await response.json();// Check if resume count is stable\nconst currentResumeCount=data.resumes?data.resumes.length:0;if(currentResumeCount===lastResumeCountRef.current){stableCountRef.current++;}else{stableCountRef.current=0;lastResumeCountRef.current=currentResumeCount;}setJobDetails(data);// Auto-select first resume ONLY on initial load, not during auto-refresh\nif(!selectedResumeId&&data.resumes&&data.resumes.length>0&&!isAutoRefresh){setSelectedResumeId(data.resumes[0].id);}// Determine if we're still processing\nconst totalResumes=((_data$resumes=data.resumes)===null||_data$resumes===void 0?void 0:_data$resumes.length)||0;const analyzedResumes=((_data$resumes2=data.resumes)===null||_data$resumes2===void 0?void 0:(_data$resumes2$filter=_data$resumes2.filter(r=>r.analysis))===null||_data$resumes2$filter===void 0?void 0:_data$resumes2$filter.length)||0;// We're processing if:\n// 1. No resumes yet (might still be processing)\n// 2. Some resumes don't have analysis yet\nconst stillProcessing=totalResumes===0||analyzedResumes<totalResumes;setIsProcessing(stillProcessing);}catch(err){setError(err.message);}finally{setIsLoading(false);}// eslint-disable-next-line react-hooks/exhaustive-deps\n},[jobId]);useEffect(()=>{setIsLoading(true);fetchJobDetails();},[jobId,fetchJobDetails]);// Auto-refresh when processing resumes\nuseEffect(()=>{let interval;// Continue auto-refresh until we detect processing is complete\nif(jobDetails){interval=setInterval(()=>{var _jobDetails$resumes,_jobDetails$resumes2,_jobDetails$resumes2$;setIsAutoRefresh(true);setIsProcessing(true);// Show progress indicator during auto-refresh                // Check current state\nconst totalResumes=((_jobDetails$resumes=jobDetails.resumes)===null||_jobDetails$resumes===void 0?void 0:_jobDetails$resumes.length)||0;const analyzedResumes=((_jobDetails$resumes2=jobDetails.resumes)===null||_jobDetails$resumes2===void 0?void 0:(_jobDetails$resumes2$=_jobDetails$resumes2.filter(r=>r.analysis))===null||_jobDetails$resumes2$===void 0?void 0:_jobDetails$resumes2$.length)||0;// Continue refreshing if:\n// 1. We have resumes but not all are analyzed\n// 2. We have no resumes yet (might still be processing)\n// 3. We're in the first few seconds after redirect (allow time for processing to start)\nconst shouldContinue=stableCountRef.current<20||// Keep checking for at least 1 minute (20 * 3s = 60s) for processing to start\ntotalResumes===0||// No resumes yet, keep checking\nanalyzedResumes<totalResumes// Some resumes not analyzed yet\n// Removed time-based condition - stop when all resumes processed\n;if(shouldContinue){fetchJobDetails();}else{clearInterval(interval);setIsProcessing(false);setIsAnalyzing(false);// Stop showing progress when complete\nsetIsAutoRefresh(false);// Clear auto-refresh flag\n}},3000);// Poll every 3 seconds\n}return()=>{if(interval){clearInterval(interval);}};},[jobDetails,fetchJobDetails]);const sortedResumes=useMemo(()=>{if(!(jobDetails!==null&&jobDetails!==void 0&&jobDetails.resumes))return[];return[...jobDetails.resumes].sort((a,b)=>{var _b$analysis,_a$analysis;return(((_b$analysis=b.analysis)===null||_b$analysis===void 0?void 0:_b$analysis.fit_score)||0)-(((_a$analysis=a.analysis)===null||_a$analysis===void 0?void 0:_a$analysis.fit_score)||0);});},[jobDetails]);const selectedResume=useMemo(()=>{if(!selectedResumeId)return null;return sortedResumes.find(r=>r.id===selectedResumeId);},[selectedResumeId,sortedResumes]);// Scroll to details when a resume is selected\nuseEffect(()=>{if(selectedResumeId&&detailsRef.current){detailsRef.current.scrollIntoView({behavior:'smooth',block:'start'});}},[selectedResumeId]);const handleRowClick=resumeId=>{const newId=selectedResumeId===resumeId?null:resumeId;setSelectedResumeId(newId);};const handleFeedbackSubmit=()=>{// Refresh job details to show any updates\nwindow.location.reload();};const handleOverrideSubmit=newBucket=>{// Update the local state to reflect the override\nif(selectedResumeForFeedback){const updatedResume=_objectSpread(_objectSpread({},selectedResumeForFeedback),{},{analysis:_objectSpread(_objectSpread({},selectedResumeForFeedback.analysis),{},{bucket:newBucket})});setSelectedResumeForFeedback(updatedResume);// Update the job details\nsetJobDetails(prev=>_objectSpread(_objectSpread({},prev),{},{resumes:prev.resumes.map(r=>r.id===selectedResumeForFeedback.id?updatedResume:r)}));}};const handleInterviewClick=resume=>{setCurrentInterviewResume(resume);setIsInterviewModalOpen(true);};const handleCloseInterviewModal=()=>{setIsInterviewModalOpen(false);setCurrentInterviewResume(null);};const handleInterviewCreated=interviewId=>{// We need to refresh the job details to get the new interview status\nsetIsInterviewModalOpen(false);// Trigger a re-fetch of job details\nfetchJobDetails();};const getScoreClass=score=>{if(score>=90)return'high';if(score>=80)return'medium-high';if(score>=65)return'medium';return'low';};if(isLoading)return/*#__PURE__*/_jsx(\"div\",{className:\"job-details-container\",children:/*#__PURE__*/_jsx(\"p\",{children:\"Loading job details...\"})});if(error)return/*#__PURE__*/_jsxs(\"div\",{className:\"job-details-container message error\",children:[\"Error: \",error]});if(!jobDetails)return/*#__PURE__*/_jsx(\"div\",{className:\"job-details-container\",children:/*#__PURE__*/_jsx(\"p\",{children:\"Job not found.\"})});// Show processing state when job exists but no resumes yet\nif(isProcessing&&(!(jobDetails!==null&&jobDetails!==void 0&&jobDetails.resumes)||jobDetails.resumes.length===0)){return/*#__PURE__*/_jsxs(\"div\",{className:\"job-details-container\",children:[/*#__PURE__*/_jsx(Link,{to:\"/jobs\",className:\"back-link\",children:\"\\u2190 Back to All Jobs\"}),/*#__PURE__*/_jsx(\"div\",{className:\"glass-container processing-status\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"processing-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"spinner\",children:\"\\uD83D\\uDD04\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Processing Resumes\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Your resumes are being analyzed in the background.\"}),/*#__PURE__*/_jsx(\"p\",{children:\"This may take a few minutes. The page will refresh automatically when processing is complete.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"processing-details\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Job ID:\"}),\" \",jobId]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Status:\"}),\" Processing...\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Auto-refresh:\"}),\" Active (every 3 seconds)\"]})]})]})})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"job-details-container\",children:[/*#__PURE__*/_jsx(Link,{to:\"/jobs\",className:\"back-link\",children:\"\\u2190 Back to All Jobs\"}),isAnalyzing&&/*#__PURE__*/_jsx(\"div\",{className:\"glass-container processing-progress\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"progress-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"progress-spinner\",children:\"\\uD83D\\uDD04\"}),/*#__PURE__*/_jsx(\"h4\",{children:\"Processing Progress\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"progress-bar-wrapper\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar\",children:/*#__PURE__*/_jsx(\"div\",{className:\"progress-fill\",style:{width:jobDetails!==null&&jobDetails!==void 0&&jobDetails.resumes?\"\".concat(jobDetails.resumes.filter(r=>r.analysis).length/jobDetails.resumes.length*100,\"%\"):'60%',animation:'progress-pulse 2s infinite'}})}),/*#__PURE__*/_jsx(\"div\",{className:\"progress-text\",children:jobDetails!==null&&jobDetails!==void 0&&jobDetails.resumes?/*#__PURE__*/_jsxs(\"span\",{children:[\"Processing \",jobDetails.resumes.filter(r=>r.analysis).length,\"/\",jobDetails.resumes.length,\" resumes...\"]}):/*#__PURE__*/_jsx(\"span\",{children:\"Starting analysis...\"})})]}),/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"em\",{children:\"Auto-refresh active - checking for updates every 3 seconds\"})}),/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"em\",{children:\"Processing will continue until all resumes are analyzed\"})})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"glass-container job-summary-card\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Candidate Overview\"}),/*#__PURE__*/_jsx(\"div\",{className:\"candidate-summary-table\",children:/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Rank\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Candidate\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Fit Score\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Bucket\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Key Skill Hits\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Gaps / Flags\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:sortedResumes.map((resume,index)=>{var _resume$analysis,_resume$analysis2,_resume$analysis3,_resume$analysis4,_resume$analysis4$ski,_resume$analysis4$ski2,_resume$analysis5,_resume$analysis5$ski,_resume$analysis5$ski2;return/*#__PURE__*/_jsxs(\"tr\",{onClick:()=>handleRowClick(resume.id),className:selectedResumeId===resume.id?'selected':'',children:[/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"strong\",{children:index+1})}),/*#__PURE__*/_jsx(\"td\",{children:resume.candidate_name||resume.filename}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"span\",{className:\"score-badge \".concat(getScoreClass((_resume$analysis=resume.analysis)===null||_resume$analysis===void 0?void 0:_resume$analysis.fit_score)),children:((_resume$analysis2=resume.analysis)===null||_resume$analysis2===void 0?void 0:_resume$analysis2.fit_score)||'N/A'})}),/*#__PURE__*/_jsx(\"td\",{children:((_resume$analysis3=resume.analysis)===null||_resume$analysis3===void 0?void 0:_resume$analysis3.bucket)||'N/A'}),/*#__PURE__*/_jsx(\"td\",{children:((_resume$analysis4=resume.analysis)===null||_resume$analysis4===void 0?void 0:(_resume$analysis4$ski=_resume$analysis4.skill_matrix)===null||_resume$analysis4$ski===void 0?void 0:(_resume$analysis4$ski2=_resume$analysis4$ski.matches)===null||_resume$analysis4$ski2===void 0?void 0:_resume$analysis4$ski2.join(', '))||'N/A'}),/*#__PURE__*/_jsx(\"td\",{children:((_resume$analysis5=resume.analysis)===null||_resume$analysis5===void 0?void 0:(_resume$analysis5$ski=_resume$analysis5.skill_matrix)===null||_resume$analysis5$ski===void 0?void 0:(_resume$analysis5$ski2=_resume$analysis5$ski.gaps)===null||_resume$analysis5$ski2===void 0?void 0:_resume$analysis5$ski2.join(', '))||'None'})]},resume.id);})})]})})]}),selectedResume&&/*#__PURE__*/_jsx(\"div\",{className:\"detailed-analysis-section\",ref:detailsRef,children:/*#__PURE__*/_jsxs(\"div\",{className:\"glass-container detailed-resume-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"detailed-resume-header\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"candidate-bucket-tag book-the-call\",children:\"\\uD83D\\uDD25 BOOK-THE-CALL\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"candidate-name\",children:selectedResume.candidate_name||'Candidate Details'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"header-actions\",children:[/*#__PURE__*/_jsx(InterviewHub,{resume:selectedResume,onSchedule:handleInterviewClick,onFeedback:()=>alert('Feedback form coming soon!')}),/*#__PURE__*/_jsxs(\"div\",{className:\"score-badge large\",children:[\"FIT SCORE: \",((_selectedResume$analy2=selectedResume.analysis)===null||_selectedResume$analy2===void 0?void 0:_selectedResume$analy2.fit_score)||'N/A',\" / 100\"]})]})]}),/*#__PURE__*/_jsx(\"p\",{className:\"reasoning\",children:generateWeightedSummary(selectedResume,selectedResume===null||selectedResume===void 0?void 0:(_selectedResume$analy3=selectedResume.analysis)===null||_selectedResume$analy3===void 0?void 0:_selectedResume$analy3.advanced_analysis)}),/*#__PURE__*/_jsx(\"div\",{className:\"score-circle-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"score-circle\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"score-number\",children:((_selectedResume$analy4=selectedResume.analysis)===null||_selectedResume$analy4===void 0?void 0:_selectedResume$analy4.fit_score)||\"N/A\"}),/*#__PURE__*/_jsx(\"span\",{className:\"score-label\",children:\"/ 100\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"section-title\",children:\"Summary\"}),/*#__PURE__*/_jsx(\"div\",{className:\"summary-points\",children:/*#__PURE__*/_jsx(\"ul\",{children:(_selectedResume$analy5=selectedResume.analysis)===null||_selectedResume$analy5===void 0?void 0:(_selectedResume$analy6=_selectedResume$analy5.summary_points)===null||_selectedResume$analy6===void 0?void 0:_selectedResume$analy6.map((point,i)=>/*#__PURE__*/_jsx(\"li\",{children:point},\"sum-\".concat(i)))})}),((_selectedResume$analy7=selectedResume.analysis)===null||_selectedResume$analy7===void 0?void 0:_selectedResume$analy7.skill_matrix)&&/*#__PURE__*/_jsx(SkillMatrix,{skills:selectedResume.analysis.skill_matrix}),((_selectedResume$analy8=selectedResume.analysis)===null||_selectedResume$analy8===void 0?void 0:_selectedResume$analy8.timeline)&&/*#__PURE__*/_jsx(Timeline,{timeline:selectedResume.analysis.timeline}),((_selectedResume$analy9=selectedResume.analysis)===null||_selectedResume$analy9===void 0?void 0:_selectedResume$analy9.logistics)&&/*#__PURE__*/_jsx(Logistics,{logistics:selectedResume.analysis.logistics}),/*#__PURE__*/_jsx(AdvancedAnalysis,{advancedAnalysis:(selectedResume===null||selectedResume===void 0?void 0:(_selectedResume$analy0=selectedResume.analysis)===null||_selectedResume$analy0===void 0?void 0:_selectedResume$analy0.advanced_analysis)||{}}),\"                    \"]},selectedResume.id)}),/*#__PURE__*/_jsx(FeedbackModal,{isOpen:isFeedbackModalOpen,onClose:()=>setIsFeedbackModalOpen(false),resume:selectedResumeForFeedback,onSubmitFeedback:handleFeedbackSubmit,onSubmitOverride:handleOverrideSubmit}),/*#__PURE__*/_jsx(InterviewModal,{isOpen:isInterviewModalOpen,onClose:handleCloseInterviewModal,resume:currentInterviewResume,jobId:jobId,onInterviewCreated:handleInterviewCreated})]});};export default JobDetailsPage;// testing-auto-refresh deployment\n// Force deployment - auto-refresh and progress indicator fixes","map":{"version":3,"names":["React","useState","useEffect","useMemo","useRef","useCallback","useParams","Link","FeedbackModal","InterviewModal","AdvancedAnalysis","jsxs","_jsxs","jsx","_jsx","generateWeightedSummary","selectedResume","advancedAnalysis","_selectedResume$analy","overallComment","analysis","reasoning","sectionWeights","section_weights","overallAssessment","overall_assessment","weightedSections","Object","entries","filter","_ref","section","weight","sort","_ref2","_ref3","a","b","strengths","shortfalls","Shortfall_Areas","sectionInsights","map","_ref4","sectionName","charAt","toUpperCase","slice","concat","join","summary","length","SkillMatrix","_ref5","_skills$matches","_skills$matches2","_skills$gaps","_skills$gaps2","skills","className","children","matches","skill","i","gaps","Timeline","_ref6","timeline","item","period","role","details","Logistics","_ref7","logistics","compensation","notice_period","work_authorization","location","InterviewHub","_ref8","resume","onSchedule","onFeedback","interview","comingSoon","feature","alert","status","onClick","style","marginRight","JobDetailsPage","_selectedResume$analy2","_selectedResume$analy3","_selectedResume$analy4","_selectedResume$analy5","_selectedResume$analy6","_selectedResume$analy7","_selectedResume$analy8","_selectedResume$analy9","_selectedResume$analy0","jobId","jobDetails","setJobDetails","selectedResumeId","setSelectedResumeId","error","setError","isLoading","setIsLoading","isProcessing","setIsProcessing","isAnalyzing","setIsAnalyzing","isAutoRefresh","setIsAutoRefresh","window","setOverallComment","isFeedbackModalOpen","setIsFeedbackModalOpen","selectedResumeForFeedback","setSelectedResumeForFeedback","isInterviewModalOpen","setIsInterviewModalOpen","currentInterviewResume","setCurrentInterviewResume","detailsRef","stableCountRef","lastResumeCountRef","fetchJobDetails","_data$resumes","_data$resumes2","_data$resumes2$filter","response","fetch","ok","Error","data","json","currentResumeCount","resumes","current","id","totalResumes","analyzedResumes","r","stillProcessing","err","message","interval","setInterval","_jobDetails$resumes","_jobDetails$resumes2","_jobDetails$resumes2$","shouldContinue","clearInterval","sortedResumes","_b$analysis","_a$analysis","fit_score","find","scrollIntoView","behavior","block","handleRowClick","resumeId","newId","handleFeedbackSubmit","reload","handleOverrideSubmit","newBucket","updatedResume","_objectSpread","bucket","prev","handleInterviewClick","handleCloseInterviewModal","handleInterviewCreated","interviewId","getScoreClass","score","to","width","animation","index","_resume$analysis","_resume$analysis2","_resume$analysis3","_resume$analysis4","_resume$analysis4$ski","_resume$analysis4$ski2","_resume$analysis5","_resume$analysis5$ski","_resume$analysis5$ski2","candidate_name","filename","skill_matrix","ref","advanced_analysis","summary_points","point","isOpen","onClose","onSubmitFeedback","onSubmitOverride","onInterviewCreated"],"sources":["/Users/aryansrivatsavadande/Downloads/talentvibe-v2-cleaned/frontend/src/JobDetailsPage.js"],"sourcesContent":["import React, { useState, useEffect, useMemo, useRef, useCallback } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport FeedbackModal from './components/FeedbackModal';\nimport InterviewModal from './components/InterviewModal';\nimport AdvancedAnalysis from './components/AdvancedAnalysis';\nimport './JobsPage.css';\n\n\nconst generateWeightedSummary = (selectedResume, advancedAnalysis) => {\n    const overallComment = selectedResume.analysis?.reasoning || \"No analysis available\";\n    const sectionWeights = advancedAnalysis?.section_weights || {};\n    const overallAssessment = advancedAnalysis?.overall_assessment || {};\n    \n    // Get sections with non-zero weights\n    const weightedSections = Object.entries(sectionWeights)\n        .filter(([section, weight]) => weight > 0)\n        .sort(([,a], [,b]) => b - a); // Sort by weight descending\n    \n    // Build strengths and shortfalls\n    const strengths = overallAssessment.strengths || [];\n    const shortfalls = overallAssessment.Shortfall_Areas || [];\n    \n    // Create section-specific insights\n    const sectionInsights = weightedSections.map(([section, weight]) => {\n        const sectionName = section.charAt(0).toUpperCase() + section.slice(1);\n        return `${sectionName} (${weight}% weight)`;\n    }).join(\", \");\n    \n    // Build the summary\n    let summary = overallComment;\n    \n    if (strengths.length > 0) {\n        summary += ` The candidate demonstrates ${strengths.slice(0, 2).join(\" and \")}.`;\n    }\n    \n    if (sectionInsights) {\n        summary += ` Key focus areas based on job requirements include ${sectionInsights}.`;\n    }\n    \n    if (shortfalls.length > 0) {\n        summary += ` However, ${shortfalls.slice(0, 1).join(\" and \")} represent areas for development.`;\n    }\n    \n    return summary;\n};\nconst SkillMatrix = ({ skills }) => (\n    <div className=\"skill-matrix\">\n        <div className=\"skill-column matches\">\n            <h4>✅ Matches ({skills.matches?.length || 0})</h4>\n            <ul>\n                {skills.matches?.map((skill, i) => <li key={`match-${i}`}>{skill}</li>)}\n            </ul>\n        </div>\n        <div className=\"skill-column gaps\">\n            <h4>🚫 Gaps ({skills.gaps?.length || 0})</h4>\n            <ul>\n                {skills.gaps?.map((skill, i) => <li key={`gap-${i}`}>{skill}</li>)}\n            </ul>\n        </div>\n    </div>\n);\n\nconst Timeline = ({ timeline }) => (\n    <div className=\"timeline\">\n        <h4>Timeline & Impact</h4>\n        <ul>\n            {timeline?.map((item, i) => (\n                <li key={`timeline-${i}`}>\n                    <strong>{item.period}:</strong> {item.role} - <em>{item.details}</em>\n                </li>\n            ))}\n        </ul>\n    </div>\n);\n\nconst Logistics = ({ logistics }) => (\n    <div className=\"logistics\">\n        <h4>Comp & Logistics</h4>\n        <ul>\n            <li><strong>Desired Comp:</strong> {logistics?.compensation || 'N/A'}</li>\n            <li><strong>Notice Period:</strong> {logistics?.notice_period || 'N/A'}</li>\n            <li><strong>Work Auth:</strong> {logistics?.work_authorization || 'N/A'}</li>\n            <li><strong>Location:</strong> {logistics?.location || 'N/A'}</li>\n        </ul>\n    </div>\n);\n\nconst InterviewHub = ({ resume, onSchedule, onFeedback }) => {\n    const { interview } = resume;\n\n    // A small helper for a consistent \"coming soon\" alert\n    const comingSoon = (feature) => alert(`${feature}: Coming soon!`);\n\n    if (interview) {\n        switch (interview.status) {\n            case 'scheduled':\n            case 'rescheduled':\n                return (\n                    <div className=\"interview-hub\">\n                        <span className=\"interview-status-text\">✅ Interview Scheduled</span>\n                        <button className=\"action-button\" onClick={() => onSchedule(resume)}>\n                            Reschedule\n                        </button>\n                        <button className=\"action-button\" onClick={() => comingSoon('Prepare Questions')}>\n                            ❓ Prepare Questions\n                        </button>\n                    </div>\n                );\n            case 'completed':\n                return (\n                    <div className=\"interview-hub\">\n                       <span className=\"interview-status-text\">⭐ Completed</span>\n                       <button className=\"action-button feedback\" onClick={() => onFeedback(resume)}>\n                            📝 Log Feedback\n                       </button>\n                    </div>\n                );\n            // Add other statuses like 'cancelled' if needed\n            default:\n                // Fallback for any other status, shows the main schedule button\n                break;\n        }\n    }\n\n    // Default case if no interview object exists or status is not handled above\n    return (\n        <button \n            className=\"action-button schedule-interview\" \n            onClick={() => onSchedule(resume)}\n        >\n            <span role=\"img\" aria-label=\"calendar icon\" style={{ marginRight: '8px' }}>🗓️</span>\n            Schedule Interview\n        </button>\n    );\n};\n\nconst JobDetailsPage = () => {\n    const { jobId } = useParams();\n    const [jobDetails, setJobDetails] = useState(null);\n    const [selectedResumeId, setSelectedResumeId] = useState(null);\n    const [error, setError] = useState(null);\n    const [isLoading, setIsLoading] = useState(true);\n    const [isProcessing, setIsProcessing] = useState(false);\n    const [isAnalyzing, setIsAnalyzing] = useState(true); // Show progress continuously\n    const [isAutoRefresh, setIsAutoRefresh] = useState(false);\n    // Removed unused overallComment state\n    // Set up callback for overall comment extraction\n    React.useEffect(() => {\n        window.setOverallComment = setOverallComment;\n        return () => {\n            delete window.setOverallComment;\n        };\n    }, []);\n    const [isFeedbackModalOpen, setIsFeedbackModalOpen] = useState(false);\n    const [selectedResumeForFeedback, setSelectedResumeForFeedback] = useState(null);\n    const [isInterviewModalOpen, setIsInterviewModalOpen] = useState(false);\n    const [currentInterviewResume, setCurrentInterviewResume] = useState(null);\n    const detailsRef = useRef(null);\n    const stableCountRef = useRef(0);\n    const lastResumeCountRef = useRef(0);\n\n    const fetchJobDetails = useCallback(async () => {\n        try {\n            const response = await fetch(`/api/jobs/${jobId}`);\n            if (!response.ok) {\n                if (response.status === 404) {\n                    throw new Error('Job not found.');\n                }\n                throw new Error('Failed to fetch job details');\n            }\n            const data = await response.json();\n            \n            // Check if resume count is stable\n            const currentResumeCount = data.resumes ? data.resumes.length : 0;\n            if (currentResumeCount === lastResumeCountRef.current) {\n                stableCountRef.current++;\n            } else {\n                stableCountRef.current = 0;\n                lastResumeCountRef.current = currentResumeCount;\n            }\n            \n            setJobDetails(data);\n            \n            // Auto-select first resume ONLY on initial load, not during auto-refresh\n            if (!selectedResumeId && data.resumes && data.resumes.length > 0 && !isAutoRefresh) {\n                setSelectedResumeId(data.resumes[0].id);\n            }\n            \n            // Determine if we're still processing\n            const totalResumes = data.resumes?.length || 0;\n            const analyzedResumes = data.resumes?.filter(r => r.analysis)?.length || 0;\n            \n            // We're processing if:\n            // 1. No resumes yet (might still be processing)\n            // 2. Some resumes don't have analysis yet\n            const stillProcessing = totalResumes === 0 || analyzedResumes < totalResumes;\n            setIsProcessing(stillProcessing);\n            \n            \n        } catch (err) {\n            setError(err.message);\n        } finally {\n            setIsLoading(false);\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [jobId]);\n\n    useEffect(() => {\n        setIsLoading(true);\n        fetchJobDetails();\n    }, [jobId, fetchJobDetails]);\n\n    // Auto-refresh when processing resumes\n    useEffect(() => {\n        let interval;\n        \n        // Continue auto-refresh until we detect processing is complete\n        if (jobDetails) {\n            interval = setInterval(() => {\n                setIsAutoRefresh(true);\n            setIsProcessing(true); // Show progress indicator during auto-refresh                // Check current state\n                const totalResumes = jobDetails.resumes?.length || 0;\n                const analyzedResumes = jobDetails.resumes?.filter(r => r.analysis)?.length || 0;\n                \n                \n                // Continue refreshing if:\n                // 1. We have resumes but not all are analyzed\n                // 2. We have no resumes yet (might still be processing)\n                // 3. We're in the first few seconds after redirect (allow time for processing to start)\n                \n                const shouldContinue = (\n                    stableCountRef.current < 20 || // Keep checking for at least 1 minute (20 * 3s = 60s) for processing to start\n                    totalResumes === 0 || // No resumes yet, keep checking\n                    analyzedResumes < totalResumes // Some resumes not analyzed yet\n                    // Removed time-based condition - stop when all resumes processed\n                );\n                \n                if (shouldContinue) {\n                    fetchJobDetails();\n                } else {\n                    clearInterval(interval);\n                    setIsProcessing(false);\n                    setIsAnalyzing(false); // Stop showing progress when complete\n                    setIsAutoRefresh(false); // Clear auto-refresh flag\n                }\n            }, 3000); // Poll every 3 seconds\n        }\n        \n        return () => {\n            if (interval) {\n                clearInterval(interval);\n            }\n        };\n    }, [jobDetails, fetchJobDetails]);\n\n    const sortedResumes = useMemo(() => {\n        if (!jobDetails?.resumes) return [];\n        return [...jobDetails.resumes].sort((a, b) => (b.analysis?.fit_score || 0) - (a.analysis?.fit_score || 0));\n    }, [jobDetails]);\n\n    const selectedResume = useMemo(() => {\n        if (!selectedResumeId) return null;\n        return sortedResumes.find(r => r.id === selectedResumeId);\n    }, [selectedResumeId, sortedResumes]);\n\n    // Scroll to details when a resume is selected\n    useEffect(() => {\n        if (selectedResumeId && detailsRef.current) {\n            detailsRef.current.scrollIntoView({\n                behavior: 'smooth',\n                block: 'start',\n            });\n        }\n    }, [selectedResumeId]);\n\n    const handleRowClick = (resumeId) => {\n        const newId = selectedResumeId === resumeId ? null : resumeId;\n        setSelectedResumeId(newId);\n    };\n\n\n    const handleFeedbackSubmit = () => {\n        // Refresh job details to show any updates\n        window.location.reload();\n    };\n\n    const handleOverrideSubmit = (newBucket) => {\n        // Update the local state to reflect the override\n        if (selectedResumeForFeedback) {\n            const updatedResume = {\n                ...selectedResumeForFeedback,\n                analysis: {\n                    ...selectedResumeForFeedback.analysis,\n                    bucket: newBucket\n                }\n            };\n            setSelectedResumeForFeedback(updatedResume);\n            \n            // Update the job details\n            setJobDetails(prev => ({\n                ...prev,\n                resumes: prev.resumes.map(r => \n                    r.id === selectedResumeForFeedback.id ? updatedResume : r\n                )\n            }));\n        }\n    };\n\n    const handleInterviewClick = (resume) => {\n        setCurrentInterviewResume(resume);\n        setIsInterviewModalOpen(true);\n    };\n\n    const handleCloseInterviewModal = () => {\n        setIsInterviewModalOpen(false);\n        setCurrentInterviewResume(null);\n    };\n\n    const handleInterviewCreated = (interviewId) => {\n        // We need to refresh the job details to get the new interview status\n        setIsInterviewModalOpen(false);\n        // Trigger a re-fetch of job details\n        fetchJobDetails(); \n    };\n\n    const getScoreClass = (score) => {\n        if (score >= 90) return 'high';\n        if (score >= 80) return 'medium-high';\n        if (score >= 65) return 'medium';\n        return 'low';\n    };\n\n    if (isLoading) return <div className=\"job-details-container\"><p>Loading job details...</p></div>;\n    if (error) return <div className=\"job-details-container message error\">Error: {error}</div>;\n    if (!jobDetails) return <div className=\"job-details-container\"><p>Job not found.</p></div>;\n    \n    // Show processing state when job exists but no resumes yet\n    if (isProcessing && (!jobDetails?.resumes || jobDetails.resumes.length === 0)) {\n        return (\n            <div className=\"job-details-container\">\n                <Link to=\"/jobs\" className=\"back-link\">← Back to All Jobs</Link>\n                <div className=\"glass-container processing-status\">\n                    <div className=\"processing-content\">\n                        <div className=\"spinner\">🔄</div>\n                        <h2>Processing Resumes</h2>\n                        <p>Your resumes are being analyzed in the background.</p>\n                        <p>This may take a few minutes. The page will refresh automatically when processing is complete.</p>\n                        <div className=\"processing-details\">\n                            <p><strong>Job ID:</strong> {jobId}</p>\n                            <p><strong>Status:</strong> Processing...</p>\n                            <p><strong>Auto-refresh:</strong> Active (every 3 seconds)</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"job-details-container\">\n            <Link to=\"/jobs\" className=\"back-link\">← Back to All Jobs</Link>\n            \n            {/* Show continuous progress indicator during analysis */}\n            {isAnalyzing && (\n                <div className=\"glass-container processing-progress\">\n                    <div className=\"progress-content\">\n                        <div className=\"progress-spinner\">🔄</div>\n                        <h4>Processing Progress</h4>\n                        <div className=\"progress-bar-wrapper\">\n                            <div className=\"progress-bar\">\n                                <div \n                                    className=\"progress-fill\"\n                                    style={{ \n                                        width: jobDetails?.resumes ? `${(jobDetails.resumes.filter(r => r.analysis).length / jobDetails.resumes.length) * 100}%` : '60%',\n                                        animation: 'progress-pulse 2s infinite'\n                                    }}\n                                ></div>\n                            </div>\n                            <div className=\"progress-text\">\n                                {jobDetails?.resumes ? (\n                                    <span>Processing {jobDetails.resumes.filter(r => r.analysis).length}/{jobDetails.resumes.length} resumes...</span>\n                                ) : (\n                                    <span>Starting analysis...</span>\n                                )}\n                            </div>\n                        </div>\n                        <p><em>Auto-refresh active - checking for updates every 3 seconds</em></p>\n                        <p><em>Processing will continue until all resumes are analyzed</em></p>\n                    </div>\n                </div>\n            )}\n            \n            <div className=\"glass-container job-summary-card\">\n                <h2>Candidate Overview</h2>\n                <div className=\"candidate-summary-table\">\n                    <table>\n                        <thead>\n                            <tr>\n                                <th>Rank</th>\n                                <th>Candidate</th>\n                                <th>Fit Score</th>\n                                <th>Bucket</th>\n                                <th>Key Skill Hits</th>\n                                <th>Gaps / Flags</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {sortedResumes.map((resume, index) => (\n                                <tr \n                                    key={resume.id} \n                                    onClick={() => handleRowClick(resume.id)}\n                                    className={selectedResumeId === resume.id ? 'selected' : ''}\n                                >\n                                    <td><strong>{index + 1}</strong></td>\n                                    <td>{resume.candidate_name || resume.filename}</td>\n                                    <td>\n                                        <span className={`score-badge ${getScoreClass(resume.analysis?.fit_score)}`}>\n                                            {resume.analysis?.fit_score || 'N/A'}\n                                        </span>\n                                    </td>\n                                    <td>{resume.analysis?.bucket || 'N/A'}</td>\n                                    <td>{resume.analysis?.skill_matrix?.matches?.join(', ') || 'N/A'}</td>\n                                    <td>{resume.analysis?.skill_matrix?.gaps?.join(', ') || 'None'}</td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n\n            {selectedResume && (\n                <div className=\"detailed-analysis-section\" ref={detailsRef}>\n                    <div key={selectedResume.id} className=\"glass-container detailed-resume-card\">\n                        <div className=\"detailed-resume-header\">\n                            <div>\n                                <div className=\"candidate-bucket-tag book-the-call\">\n                                    🔥 BOOK-THE-CALL\n                                </div>\n                                <h3 className=\"candidate-name\">{selectedResume.candidate_name || 'Candidate Details'}</h3>\n                            </div>\n                            <div className=\"header-actions\">\n                                <InterviewHub \n                                    resume={selectedResume} \n                                    onSchedule={handleInterviewClick} \n                                    onFeedback={() => alert('Feedback form coming soon!')}\n                                />\n                                <div className=\"score-badge large\">\n                                    FIT SCORE: {selectedResume.analysis?.fit_score || 'N/A'} / 100\n                                </div>\n                            </div>\n                        </div>\n                        <p className=\"reasoning\">{generateWeightedSummary(selectedResume, selectedResume?.analysis?.advanced_analysis)}</p>\n                        \n                        <div className=\"score-circle-container\">\n                            <div className=\"score-circle\">\n                                <span className=\"score-number\">{selectedResume.analysis?.fit_score || \"N/A\"}</span>\n                                <span className=\"score-label\">/ 100</span>\n                            </div>\n                        </div>\n                        <div className=\"section-title\">Summary</div>\n                        <div className=\"summary-points\">\n                            <ul>\n                                {selectedResume.analysis?.summary_points?.map((point, i) => <li key={`sum-${i}`}>{point}</li>)}\n                            </ul>\n                        </div>\n\n                        {selectedResume.analysis?.skill_matrix && <SkillMatrix skills={selectedResume.analysis.skill_matrix} />}\n                        {selectedResume.analysis?.timeline && <Timeline timeline={selectedResume.analysis.timeline} />}\n                        {selectedResume.analysis?.logistics && <Logistics logistics={selectedResume.analysis.logistics} />}\n                        <AdvancedAnalysis advancedAnalysis={selectedResume?.analysis?.advanced_analysis || {}} />                    </div>\n                </div>\n            )}\n\n            <FeedbackModal\n                isOpen={isFeedbackModalOpen}\n                onClose={() => setIsFeedbackModalOpen(false)}\n                resume={selectedResumeForFeedback}\n                onSubmitFeedback={handleFeedbackSubmit}\n                onSubmitOverride={handleOverrideSubmit}\n            />\n\n            <InterviewModal\n                isOpen={isInterviewModalOpen}\n                onClose={handleCloseInterviewModal}\n                resume={currentInterviewResume}\n                jobId={jobId}\n                onInterviewCreated={handleInterviewCreated}\n            />\n        </div>\n    );\n};\n\nexport default JobDetailsPage; // testing-auto-refresh deployment\n// Force deployment - auto-refresh and progress indicator fixes\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}