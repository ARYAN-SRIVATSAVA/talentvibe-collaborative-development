{"ast":null,"code":"import React,{Suspense}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";const AdvancedAnalysis=/*#__PURE__*/React.lazy(()=>import(\"./AdvancedAnalysis\"));const AnalysisWrapper=_ref=>{let{analysis}=_ref;return/*#__PURE__*/_jsx(\"div\",{children:analysis!==null&&analysis!==void 0&&analysis.advanced_analysis?/*#__PURE__*/_jsx(Suspense,{fallback:/*#__PURE__*/_jsx(\"div\",{children:\"Loading advanced analysis...\"}),children:/*#__PURE__*/_jsx(AdvancedAnalysis,{advancedAnalysis:analysis.advanced_analysis})}):/*#__PURE__*/_jsx(\"div\",{children:\"No advanced analysis data available\"})});};export default AnalysisWrapper;","map":{"version":3,"names":["React","Suspense","jsx","_jsx","AdvancedAnalysis","lazy","AnalysisWrapper","_ref","analysis","children","advanced_analysis","fallback","advancedAnalysis"],"sources":["/Users/aryansrivatsavadande/Downloads/talentvibe-v2/frontend/src/components/AnalysisWrapper.js"],"sourcesContent":["import React, { Suspense } from \"react\";\n\nconst AdvancedAnalysis = React.lazy(() => import(\"./AdvancedAnalysis\"));\n\nconst AnalysisWrapper = ({ analysis }) => {\n  return (\n    <div>\n      {analysis?.advanced_analysis ? (\n        <Suspense fallback={<div>Loading advanced analysis...</div>}>\n          <AdvancedAnalysis advancedAnalysis={analysis.advanced_analysis} />\n        </Suspense>\n      ) : (\n        <div>No advanced analysis data available</div>\n      )}\n    </div>\n  );\n};\n\nexport default AnalysisWrapper;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAExC,KAAM,CAAAC,gBAAgB,cAAGJ,KAAK,CAACK,IAAI,CAAC,IAAM,MAAM,CAAC,oBAAoB,CAAC,CAAC,CAEvE,KAAM,CAAAC,eAAe,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACnC,mBACEJ,IAAA,QAAAM,QAAA,CACGD,QAAQ,SAARA,QAAQ,WAARA,QAAQ,CAAEE,iBAAiB,cAC1BP,IAAA,CAACF,QAAQ,EAACU,QAAQ,cAAER,IAAA,QAAAM,QAAA,CAAK,8BAA4B,CAAK,CAAE,CAAAA,QAAA,cAC1DN,IAAA,CAACC,gBAAgB,EAACQ,gBAAgB,CAAEJ,QAAQ,CAACE,iBAAkB,CAAE,CAAC,CAC1D,CAAC,cAEXP,IAAA,QAAAM,QAAA,CAAK,qCAAmC,CAAK,CAC9C,CACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAAH,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}